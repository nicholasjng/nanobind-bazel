name: Extract nanobind_example compile commands for CMake and Bazel

on:
  workflow_dispatch:

jobs:
  nb-compile-commands:
    name: Capture nanobind CMake compile commands on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v4
        with:
          repository: wjakob/nanobind_example
          path: nanobind_example
          fetch-depth: 0
      - uses: actions/checkout@v4
        with:
          path: nanobind-bazel
      - name: Set up Python and dependencies
        uses: actions/setup-python@v5
        with:
          python-version: 3.12
      - run: python -m pip install --upgrade build
      - name: Build and capture CMake compile commands
        run: python -m build . --wheel --config-setting="cmake.args=-DCMAKE_EXPORT_COMPILE_COMMANDS=ON"
        working-directory: nanobind_example
      - name: Upload CMake commands and Ninja build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: compile-commands-${{ matrix.os}}-cmake
          path: |
            # the build subfolder name is autogenerated, so just use a glob.
            nanobind_example/build/cp312-*/*.ninja  # this has the linker command section. 
            nanobind_example/build/cp312-*/CMakeCache.txt
            nanobind_example/build/cp312-*/compile_commands.json
          if-no-files-found: error
      - name: Clean repo and switch to Bazel
        run: git clean -xdf && git checkout bazel
        working-directory: nanobind_example
      - name: Extract Bazel compile commands for ${{ matrix.os}}
        run: |
          bazel run @hedron_compile_commands//:refresh_all \
            -- \
            --compilation_mode=opt \
            --cxxopt=-std=c++17 \
            --@rules_python//python/config_settings:python_version=3.12 \
            --@nanobind_bazel//:minsize \
            --@nanobind_bazel//:py-limited-api=cp312
        shell: bash
        working-directory: nanobind_example
      - name: Upload Bazel compile commands and flag files for ${{ matrix.os }}
        uses: actions/upload-artifact@v4
        with:
          name: compile-commands-${{ matrix.os}}-bazel
          path: |
            nanobind_example/compile_commands.json
            nanobind_example/bazel-out/**/*.params  # these should be two - the libnanobind params, and the nanobind_example_ext params.
          if-no-files-found: error
